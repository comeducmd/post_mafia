<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Mafia Main</title>
    <link rel="stylesheet" href="stylesheets/style.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r120/three.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r120/three.min.js"></script>
    <script src="https://threejs.org/build/three.min.js"></script>
    <script src='https://threejs.org/examples/js/controls/OrbitControls.js'></script>
</head>

<body>
    <div class="connect-form">
        <div class="nameinput">
            <h1>이름 입력</h1>
            <input type="text" id="username" placeholder="이름 입력" />
            <button id="nameEnterBtn">이름 입력</button>
        </div>

        <div class="roomselection" style="display: none;">
            <h2>환영합니다, <span id="un"></span> 님!</h2>
            <button id="nameChangeBtn">이름 바꾸기</button>
            <h3 id="h3_roomList">현재 입장 가능한 방 목록</h3>
            <input type="button" id="reloadBtn" href="/">
            
            <div id='roomBtn'>
                <button id="roomEnterBtn">Join</button>
                <button id="roomCreatBtn" onclick="document.querySelector(' #modalLayer ').classList.toggle('hidden')">Create</button>
            </div>

            <div id="roomList">
                <% for (r in rooms) {%>
                    <% if ((rooms[r].isRunning)===false) {%>
                        <div id='EachRoom'>
                            <input type="radio" name="room" id="<%= rooms[r]._id %>" value="<%= rooms[r].name %>" />
                        <%= rooms[r].name %> (
                            <%= rooms[r].members %>/5)
                                <%} %>
                                    <%} %>
                        </div>  
            </div>
            
            
                                    
            <div id="modalLayer" class="hidden">
                <input id="newroomname" type="text " name="roomName" placeholder="방 이름 입력 " />
                <input id="newroomsubmit" type="submit" value="만들기" />
            </div>
        </div>
    </div>

    <script>
        var scene = new THREE.Scene();
        var aspect = window.innerWidth / window.innerHeight;
        camera = new THREE.PerspectiveCamera(30, window.innerWidth / window.innerHeight, 1, 10000);

        var renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        var galaxy_geometry = new THREE.SphereGeometry(400, 32, 32);
        var galaxy_material = new THREE.MeshBasicMaterial();
        galaxy_material.map = new THREE.ImageUtils.loadTexture('img/galaxy.png');
        galaxy_material.side = THREE.BackSide
        var galaxy = new THREE.Mesh(galaxy_geometry, galaxy_material);
        scene.add(galaxy);

        var mars_geometry = new THREE.SphereGeometry(20, 32, 32);
        var mars_material = new THREE.MeshBasicMaterial();
        mars_material.map = new THREE.ImageUtils.loadTexture('img/marsmap1k.jpg');
        mars_material.bumpMap = new THREE.ImageUtils.loadTexture('img/marsbump1k.jpg');
        mars_material.bumpScale = 0.05;
        var mars = new THREE.Mesh(mars_geometry, mars_material);
        mars.position.x = -50;
        mars.position.y = 5;
        scene.add(mars);

        var controls = new THREE.OrbitControls(camera, renderer.domElement);
        controls.maxPolarAngle = Math.PI * 0.48;
        controls.minDistance = 30;
        controls.maxDistance = 500;
        controls.update();

        camera.position.set(-100, 50, 150);
        camera.lookAt(scene.position);
        camera.up.set(0, 1, 0);
        camera.updateProjectionMatrix();

        scene.add(new THREE.AmbientLight(0x666666));
        var light = new THREE.DirectionalLight(0xdfebff, 1);
        light.position.set(50, 200, 100);
        light.position.multiplyScalar(1.3);
        light.castShadow = true;
        light.shadow.mapSize.width = 1024;
        light.shadow.mapSize.height = 1024;
        var d = 300;
        light.shadow.camera.left = -d;
        light.shadow.camera.right = d;
        light.shadow.camera.top = d;
        light.shadow.camera.bottom = -d;
        light.shadow.camera.far = 1000;
        scene.add(light);


        function render(time) {
            time *= 0.0002;
            g_time = time * 0.1;
            mars.rotation.y = time;
            galaxy.rotation.y = g_time;

            requestAnimationFrame(render);
            controls.update();
            camera.aspect = window.innerWidth / window.innerHeight;
			camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
            renderer.render(scene, camera);
        }

        render();
    </script>
    <script type="text/javascript " src="scripts/main_client.js "></script>
    <script src="/scripts/jquery-3.5.1.js"></script>
</body>

</html>